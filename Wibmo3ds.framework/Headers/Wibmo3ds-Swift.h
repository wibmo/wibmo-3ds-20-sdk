#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.0 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import PKHUD;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Wibmo3ds",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC8Wibmo3ds31AuthenticationRequestParameters")
@interface AuthenticationRequestParameters : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC8Wibmo3ds13Customization")
@interface Customization : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds19ButtonCustomization")
@interface ButtonCustomization : Customization
@end


/// The ChallengeParameters class shall hold the parameters that are required to conduct the challenge process.
SWIFT_CLASS("_TtC8Wibmo3ds19ChallengeParameters")
@interface ChallengeParameters : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CompletionEvent;
@class ProtocolErrorEvent;
@class RuntimeErrorEvent;

SWIFT_PROTOCOL("_TtP8Wibmo3ds23ChallengeStatusReceiver_")
@protocol ChallengeStatusReceiver
- (void)completed:(CompletionEvent * _Null_unspecified)e;
- (void)cancelled;
- (void)timedout;
- (void)protocolError:(ProtocolErrorEvent * _Null_unspecified)e;
- (void)runtimeError:(RuntimeErrorEvent * _Null_unspecified)e;
@end


SWIFT_CLASS("_TtC8Wibmo3ds15CompletionEvent")
@interface CompletionEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds16ConfigParameters")
@interface ConfigParameters : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@protocol SDKChallengeProtocol;

SWIFT_PROTOCOL("_TtP8Wibmo3ds24GenericChallengeProtocol_")
@protocol GenericChallengeProtocol
- (void)clickVerifyButton;
- (NSString * _Nonnull)getChallengeType SWIFT_WARN_UNUSED_RESULT;
- (void)clickCancelButton;
- (void)setChallengeProtocolWithSdkChallengeProtocol:(id <SDKChallengeProtocol> _Nonnull)sdkChallengeProtocol;
/// <p> Callback to notify the SDK to expand all text areas before RefApp takes a screenshot
/// for Visual Test Cases. </p>
/// *
- (void)expandTextsBeforeScreenshot;
@end


SWIFT_CLASS("_TtC8Wibmo3ds18LabelCustomization")
@interface LabelCustomization : Customization
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds28MultiSelectChallengeProtocol_")
@protocol MultiSelectChallengeProtocol <GenericChallengeProtocol>
- (void)selectIndex:(NSInteger)index;
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds26OutOfBandChallengeProtocol_")
@protocol OutOfBandChallengeProtocol <GenericChallengeProtocol>
@end

@class NSCoder;

SWIFT_CLASS("_TtC8Wibmo3ds14ProgressDialog")
@interface ProgressDialog : PKHUDProgressView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// A protocol error is any error message that is returned by the ACS or
/// an error message that is generated by the 3DS SDK to be returned to the ACS
SWIFT_CLASS("_TtC8Wibmo3ds18ProtocolErrorEvent")
@interface ProtocolErrorEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The RuntimeErrorEvent class shall hold details of run-time
/// errors that are encountered by the 3DS SDK during authentication
SWIFT_CLASS("_TtC8Wibmo3ds17RuntimeErrorEvent")
@interface RuntimeErrorEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds16RuntimeException")
@interface RuntimeException : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds30SDKAlreadyInitializedException")
@interface SDKAlreadyInitializedException : RuntimeException
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds20SDKChallengeProtocol_")
@protocol SDKChallengeProtocol
- (void)handleChallenge;
@end


SWIFT_CLASS("_TtC8Wibmo3ds26SDKNotInitializedException")
@interface SDKNotInitializedException : RuntimeException
@end


SWIFT_CLASS("_TtC8Wibmo3ds19SDKRuntimeException")
@interface SDKRuntimeException : RuntimeException
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds31SingleSelectorChallengeProtocol_")
@protocol SingleSelectorChallengeProtocol <GenericChallengeProtocol>
- (void)selectObject:(NSInteger)index;
@end


SWIFT_CLASS("_TtC8Wibmo3ds20TextBoxCustomization")
@interface TextBoxCustomization : Customization
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds21TextChallengeProtocol_")
@protocol TextChallengeProtocol <GenericChallengeProtocol>
- (void)typeTextChallengeValue:(NSString * _Nonnull)value;
@end

@class UIApplication;
@class UiCustomization;
@protocol Transaction;
@class Warning;

/// The ThreeDS2Service interface is the main 3DS SDK interface.
/// It provides methods to process transactions.
SWIFT_PROTOCOL("_TtP8Wibmo3ds15ThreeDS2Service_")
@protocol ThreeDS2Service
/// Initializes the 3DS SDK instance.
- (BOOL)initialize:(UIApplication * _Nullable)application :(ConfigParameters * _Nullable)configParameters :(NSString * _Nullable)locale :(UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
/// Creates an instance of Transaction through which the 3DS Requestor App gets the data that is required to perform the transaction.
- (id <Transaction> _Nullable)createTransaction:(NSString * _Nonnull)directoryServerID :(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Frees up resources that are used by the 3DS Requestor App until it is closed. It shall be called only once during a single 3DS Requestor App session.
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
/// Returns the version of the 3DS SDK that is integrated with the 3DS Requestor App.
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns warnings produced by the 3DS SDK while performing security checks during initialization.
- (NSArray<Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8Wibmo3ds20ToolbarCustomization")
@interface ToolbarCustomization : Customization
@end


/// An object that implements the Transaction interface shall hold
/// parameters that the 3DS Server requires to create AReq messages and to perform the Challenge Flow.
SWIFT_PROTOCOL("_TtP8Wibmo3ds11Transaction_")
@protocol Transaction
/// Returns device and 3DS SDK information to the 3DS Requestor App
- (AuthenticationRequestParameters * _Nonnull)getAuthenticationRequestParameters SWIFT_WARN_UNUSED_RESULT;
/// Initiates the challenge process.
- (BOOL)doChallenge:(ChallengeParameters * _Nonnull)challengeParameters :(id <ChallengeStatusReceiver> _Nonnull)challengeStatusReceiver :(NSInteger)timeOut error:(NSError * _Nullable * _Nullable)error;
/// Returns an instance of Progress View (processing screen) that the 3DS Requestor App uses.
- (ProgressDialog * _Nullable)getProgressViewAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Cleans up resources that are held by the Transaction object.
- (void)close;
@end








/// The UiCustomization class shall provide the functionality required
/// to customize the 3DS SDK UI elements. An object of this class holds various UI-related parameters
SWIFT_CLASS("_TtC8Wibmo3ds15UiCustomization")
@interface UiCustomization : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds7Warning")
@interface Warning : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class UIWebView;

SWIFT_PROTOCOL("_TtP8Wibmo3ds20WebChallengeProtocol_")
@protocol WebChallengeProtocol <GenericChallengeProtocol>
- (UIWebView * _Nonnull)getWebView SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8Wibmo3ds8Wibmo3ds")
@interface Wibmo3ds : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end






@interface Wibmo3ds (SWIFT_EXTENSION(Wibmo3ds)) <ThreeDS2Service>
- (BOOL)initialize:(UIApplication * _Nullable)application :(ConfigParameters * _Nullable)configParameters :(NSString * _Nullable)locale :(UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
- (id <Transaction> _Nullable)createTransaction:(NSString * _Nonnull)directoryServerID :(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Warning *> * _Nonnull)getWarningsAndReturnError SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.0 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import PKHUD;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Wibmo3ds",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC8Wibmo3ds31AuthenticationRequestParameters")
@interface AuthenticationRequestParameters : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC8Wibmo3ds13Customization")
@interface Customization : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds19ButtonCustomization")
@interface ButtonCustomization : Customization
@end


/// The ChallengeParameters class shall hold the parameters that are required to conduct the challenge process.
SWIFT_CLASS("_TtC8Wibmo3ds19ChallengeParameters")
@interface ChallengeParameters : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CompletionEvent;
@class ProtocolErrorEvent;
@class RuntimeErrorEvent;

SWIFT_PROTOCOL("_TtP8Wibmo3ds23ChallengeStatusReceiver_")
@protocol ChallengeStatusReceiver
- (void)completed:(CompletionEvent * _Null_unspecified)e;
- (void)cancelled;
- (void)timedout;
- (void)protocolError:(ProtocolErrorEvent * _Null_unspecified)e;
- (void)runtimeError:(RuntimeErrorEvent * _Null_unspecified)e;
@end


SWIFT_CLASS("_TtC8Wibmo3ds15CompletionEvent")
@interface CompletionEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds16ConfigParameters")
@interface ConfigParameters : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@protocol SDKChallengeProtocol;

SWIFT_PROTOCOL("_TtP8Wibmo3ds24GenericChallengeProtocol_")
@protocol GenericChallengeProtocol
- (void)clickVerifyButton;
- (NSString * _Nonnull)getChallengeType SWIFT_WARN_UNUSED_RESULT;
- (void)clickCancelButton;
- (void)setChallengeProtocolWithSdkChallengeProtocol:(id <SDKChallengeProtocol> _Nonnull)sdkChallengeProtocol;
/// <p> Callback to notify the SDK to expand all text areas before RefApp takes a screenshot
/// for Visual Test Cases. </p>
/// *
- (void)expandTextsBeforeScreenshot;
@end


SWIFT_CLASS("_TtC8Wibmo3ds18LabelCustomization")
@interface LabelCustomization : Customization
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds28MultiSelectChallengeProtocol_")
@protocol MultiSelectChallengeProtocol <GenericChallengeProtocol>
- (void)selectIndex:(NSInteger)index;
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds26OutOfBandChallengeProtocol_")
@protocol OutOfBandChallengeProtocol <GenericChallengeProtocol>
@end

@class NSCoder;

SWIFT_CLASS("_TtC8Wibmo3ds14ProgressDialog")
@interface ProgressDialog : PKHUDProgressView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// A protocol error is any error message that is returned by the ACS or
/// an error message that is generated by the 3DS SDK to be returned to the ACS
SWIFT_CLASS("_TtC8Wibmo3ds18ProtocolErrorEvent")
@interface ProtocolErrorEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The RuntimeErrorEvent class shall hold details of run-time
/// errors that are encountered by the 3DS SDK during authentication
SWIFT_CLASS("_TtC8Wibmo3ds17RuntimeErrorEvent")
@interface RuntimeErrorEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds16RuntimeException")
@interface RuntimeException : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds30SDKAlreadyInitializedException")
@interface SDKAlreadyInitializedException : RuntimeException
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds20SDKChallengeProtocol_")
@protocol SDKChallengeProtocol
- (void)handleChallenge;
@end


SWIFT_CLASS("_TtC8Wibmo3ds26SDKNotInitializedException")
@interface SDKNotInitializedException : RuntimeException
@end


SWIFT_CLASS("_TtC8Wibmo3ds19SDKRuntimeException")
@interface SDKRuntimeException : RuntimeException
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds31SingleSelectorChallengeProtocol_")
@protocol SingleSelectorChallengeProtocol <GenericChallengeProtocol>
- (void)selectObject:(NSInteger)index;
@end


SWIFT_CLASS("_TtC8Wibmo3ds20TextBoxCustomization")
@interface TextBoxCustomization : Customization
@end


SWIFT_PROTOCOL("_TtP8Wibmo3ds21TextChallengeProtocol_")
@protocol TextChallengeProtocol <GenericChallengeProtocol>
- (void)typeTextChallengeValue:(NSString * _Nonnull)value;
@end

@class UIApplication;
@class UiCustomization;
@protocol Transaction;
@class Warning;

/// The ThreeDS2Service interface is the main 3DS SDK interface.
/// It provides methods to process transactions.
SWIFT_PROTOCOL("_TtP8Wibmo3ds15ThreeDS2Service_")
@protocol ThreeDS2Service
/// Initializes the 3DS SDK instance.
- (BOOL)initialize:(UIApplication * _Nullable)application :(ConfigParameters * _Nullable)configParameters :(NSString * _Nullable)locale :(UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
/// Creates an instance of Transaction through which the 3DS Requestor App gets the data that is required to perform the transaction.
- (id <Transaction> _Nullable)createTransaction:(NSString * _Nonnull)directoryServerID :(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Frees up resources that are used by the 3DS Requestor App until it is closed. It shall be called only once during a single 3DS Requestor App session.
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
/// Returns the version of the 3DS SDK that is integrated with the 3DS Requestor App.
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns warnings produced by the 3DS SDK while performing security checks during initialization.
- (NSArray<Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8Wibmo3ds20ToolbarCustomization")
@interface ToolbarCustomization : Customization
@end


/// An object that implements the Transaction interface shall hold
/// parameters that the 3DS Server requires to create AReq messages and to perform the Challenge Flow.
SWIFT_PROTOCOL("_TtP8Wibmo3ds11Transaction_")
@protocol Transaction
/// Returns device and 3DS SDK information to the 3DS Requestor App
- (AuthenticationRequestParameters * _Nonnull)getAuthenticationRequestParameters SWIFT_WARN_UNUSED_RESULT;
/// Initiates the challenge process.
- (BOOL)doChallenge:(ChallengeParameters * _Nonnull)challengeParameters :(id <ChallengeStatusReceiver> _Nonnull)challengeStatusReceiver :(NSInteger)timeOut error:(NSError * _Nullable * _Nullable)error;
/// Returns an instance of Progress View (processing screen) that the 3DS Requestor App uses.
- (ProgressDialog * _Nullable)getProgressViewAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Cleans up resources that are held by the Transaction object.
- (void)close;
@end








/// The UiCustomization class shall provide the functionality required
/// to customize the 3DS SDK UI elements. An object of this class holds various UI-related parameters
SWIFT_CLASS("_TtC8Wibmo3ds15UiCustomization")
@interface UiCustomization : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8Wibmo3ds7Warning")
@interface Warning : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class UIWebView;

SWIFT_PROTOCOL("_TtP8Wibmo3ds20WebChallengeProtocol_")
@protocol WebChallengeProtocol <GenericChallengeProtocol>
- (UIWebView * _Nonnull)getWebView SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8Wibmo3ds8Wibmo3ds")
@interface Wibmo3ds : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end






@interface Wibmo3ds (SWIFT_EXTENSION(Wibmo3ds)) <ThreeDS2Service>
- (BOOL)initialize:(UIApplication * _Nullable)application :(ConfigParameters * _Nullable)configParameters :(NSString * _Nullable)locale :(UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
- (id <Transaction> _Nullable)createTransaction:(NSString * _Nonnull)directoryServerID :(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Warning *> * _Nonnull)getWarningsAndReturnError SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
